from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
import random
import asyncio
import datetime
import pytz

TOKEN = "925556553:AAE5gTUPQ_tHlWy6VG-BAc-TJTxXfA1dXII"

# –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
MOTIVATIONS = [
    "‚öΩ –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ!",
    "üèãÔ∏è‚Äç‚ôÇÔ∏è –î–≤–∏–≥–∞–π—Å—è! –î–∞–∂–µ 15 –º–∏–Ω—É—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ª—É—á—à–µ, —á–µ–º –Ω–∏—á–µ–≥–æ!",
    "üèÜ –¢—ã —É–∂–µ –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è!",
    "üìä –°–ø–æ—Ä—Ç = —ç–Ω–µ—Ä–≥–∏—è. –í—Å—Ç–∞–≤–∞–π –∏ —Å–¥–µ–ª–∞–π –∑–∞—Ä—è–¥–∫—É!",
    "üåü –¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–∞–º, –≥–¥–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –æ—Ç–≥–æ–≤–æ—Ä–∫–∏."
]

# –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
def get_main_menu():
    keyboard = [
        [InlineKeyboardButton("üìö –ö–Ω–∏–≥–∏ –æ —Å–ø–æ—Ä—Ç–µ", callback_data='books')],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data='contacts')],
        [InlineKeyboardButton("üåä –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –º—É–∑—ã–∫–∞", callback_data='music')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    context.chat_data["registered"] = True

    await update.message.reply_text(
        "üéΩ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç!\n"
        "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å:\n"
        "‚è∞ –í 10:00, 12:00, 16:00, 17:00 –∏ 20:00 –ø–æ –ú–°–ö.\n\n"
        "–ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=get_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ùì –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "- –ü—Ä–∏—Å—ã–ª–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è\n"
        "- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–∏–≥–∏ –æ —Å–ø–æ—Ä—Ç–µ\n"
        "- –î–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã\n"
        "- –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –º—É–∑—ã–∫–æ–π\n\n"
        "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'books':
        text = "üìñ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫ –ø—Ä–æ—á—Ç–µ–Ω–∏—é:\n- '–≠—Å—Å–µ–Ω—Ü–∏–∞–ª–∏–∑–º' –ì—Ä–µ–≥ –ú–∞–∫–ö–µ–æ–Ω\n- '–°–∏–ª–∞ –ø—Ä–∏–≤—ã—á–∫–∏' –ß–∞—Ä–ª—å–∑ –î–∞—Ö–∏–≥–≥\n- '–ë–æ–ª—å—à–µ —á–µ–º —Ç–µ–ª–æ' –õ–µ–∫—Å–∏ –ö–∞–π—Ç"
    elif query.data == 'contacts':
        text = "üìû –°–≤—è–∂–∏—Å—å —Å –Ω–∞–º–∏:\nInstagram: @fitness_bot\nTelegram: @yourcoach\nEmail: fitbot@example.com"
    elif query.data == 'music':
        text = "üéµ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç:\n- Eye of the Tiger\n- Can't Hold Us\n- Lose Yourself"
    else:
        text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."

    await query.edit_message_text(text, reply_markup=get_main_menu())

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
async def scheduler(application):
    tz = pytz.timezone("Europe/Moscow")
    target_hours = [10, 12, 16, 17, 20]  # –î–æ–±–∞–≤–ª–µ–Ω—ã 17 –∏ 20
    sent_today = set()

    while True:
        now = datetime.datetime.now(tz)
        if now.hour in target_hours and now.hour not in sent_today:
            message = random.choice(MOTIVATIONS)
            for chat_id in application.chat_data:
                try:
                    await application.bot.send_message(chat_id=chat_id, text=message)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")
            sent_today.add(now.hour)

        if now.hour == 0:
            sent_today.clear()
        await asyncio.sleep(60)

# –§–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def on_startup(app: Application):
    asyncio.create_task(scheduler(app))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).post_init(on_startup).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("üéΩ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()
